.PHONY: clean-pyc clean-build clean docs
UNAME := $(shell uname)

SPHINX_BUILDARGS=
# Note that these are keys generated by the docker rsconnect service, so are
# not really secrets. They are saved to json to make it easy to use rsconnect
# as multiple users from the tests


ifeq ($(UNAME), Darwin)
    BROWSER := open
else
    BROWSER := python -mwebbrowser
endif

help:
	@echo "clean - remove all build, test, coverage and Python artifacts"
	@echo "clean-build - remove build artifacts"
	@echo "clean-pyc - remove Python file artifacts"
	@echo "clean-test - remove test and coverage artifacts"
	@echo "lint - check style with flake8"
	@echo "test - run tests quickly with the default Python"
	@echo "coverage - check code coverage quickly with the default Python"
	@echo "docs - generate Sphinx HTML documentation, including API docs"
	@echo "cdocs - cleanout previous build & generate Sphinx HTML documentation, including API docs"
	@echo "release - package and upload a release"
	@echo "dist - package"
	@echo "install - install the package to the active Python's site-packages"

clean: clean-build clean-pyc clean-test docs-clean

clean-build:
	rm -fr build/
	rm -fr dist/
	rm -fr .eggs/
	find . -name '*.egg-info' -exec rm -fr {} +
	find . -name '*.egg' -exec rm -f {} +

clean-pyc:
	find . -name '*.pyc' -exec rm -f {} +
	find . -name '*.pyo' -exec rm -f {} +
	find . -name '*~' -exec rm -f {} +
	find . -name '__pycache__' -exec rm -fr {} +

clean-test:
	rm -f .coverage
	rm -f coverage.xml
	rm -fr htmlcov/

lint:
	flake8 paintnine

test: clean-test
	pytest -m

coverage:
	coverage report -m
	coverage html
	$(BROWSER) htmlcov/index.html

cdocs cdoc cdocumentation: docs-clean docs

docs-clean:
	$(MAKE) -C docs clean

docs doc documentation:
	$(MAKE) -C docs html
	$(BROWSER) docs/_build/html/index.html

release: dist
	twine upload dist/*

dist: clean
	python setup.py sdist

install: clean
	python setup.py install

develop: clean-pyc
	python setup.py develop


